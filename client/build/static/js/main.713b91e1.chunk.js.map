{"version":3,"sources":["utils/history.js","react-auth0-spa.js","components/NavBar/NavBar.js","components/ProfileCard/ProfileCard.js","components/DiabetesChart/DiabetesChart.js","components/InputForm/InputForm.js","pages/Main/Main.js","components/AlertHelper/AlertHelper.js","utils/API.js","components/SearchResults/SearchResults.js","pages/Search/Search.js","pages/Update/Update.js","components/PrivateRoute/PrivateRoute.js","components/Footer/Footer.js","components/Articles/Articles.js","pages/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","navBar","props","_useAuth","isAuthenticated","loginWithRedirect","logout","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","Navbar","className","color","expand","NavbarBrand","href","width","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","Fragment","NavLink","id","NavItem","ProfileCard","loading","user","Card","CardImg","top","picture","CardBody","CardTitle","name","CardSubtitle","email","DiabetesChart","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","generateData","react","dx_react_chart_bootstrap4_es","height","showGrid","showLabels","valueField","argumentField","point","size","text","dx_react_chart_es","InputForm","Component","CardHeader","Form","FormGroup","Input","assign","type","placeholder","Button","block","saveToDatabase","AlertHelper","messageText","setMessageText","useEffect","bloodSugar","Number","parseInt","bsLevel","console","log","err","Modal","toggle","ModalHeader","ModalBody","ModalFooter","API","getByDay","axios","post","date","userId","saveData","getOneRecord","get","updateRecord","put","deleteRecord","delete","Main","_this","handleInputChange","event","_event$target","target","value","setState","defineProperty","toggleModal","isModalOpen","state","today","glucose","glucoseLevel","sub","then","res","getFromDatabase","catch","results","Date","resData","newArray","forEach","item","realTime","moment","utc","tz","format","split","join","newObj","high","low","unshift","chartData","start","end","step","prevProps","Container","Row","dist_default","local","Col","md","components_ProfileCard_ProfileCard","InputForm_InputForm","onChange","DiabetesChart_DiabetesChart","components_AlertHelper_AlertHelper","withMainHOC","SearchResults","editData","length","ListGroup","map","info","ListGroupItem","calender","react_router_dom","to","Search","handleChange","startDate","update","testTime","setTime","_id","_this2","forceRefresh","sm","react_datepicker_min_default","selected","SearchResults_SearchResults","windowReload","Update","updatedGlucose","records","time","editRecord","newData","getRecord","match","params","timeStamp","newDate","reverse","newTime","_this3","PrivateRoute","_ref","component","path","rest","objectWithoutProperties","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","appState","targetUrl","stop","apply","arguments","fn","react_router","render","footer","fluid","Article","inverse","CardImgOverlay","lg","CardText","rel","Login","Articles","Footer_Footer","App","NavBar_NavBar","exact","components_PrivateRoute_PrivateRoute","Boolean","hostname","ReactDOM","children","_ref$onRedirectCallba","onRedirectCallback","initOptions","setIsAuthenticated","_useState3","_useState4","setUser","_useState5","_useState6","auth0Client","setAuth0","_useState7","_useState8","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","auth0FromHook","_ref3","_user","createAuth0Client","objectSpread","sent","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","_ref4","_callee2","_args2","_context2","undefined","t0","error","finish","_ref5","_callee3","_context3","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","push","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.713b91e1.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client({...initOptions});\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};","//import React from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport \"./NavBar.css\";\r\n\r\nconst navBar = props => {\r\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n\r\n  // const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navBar mb-5\" color=\"blue\" expand=\"md\">\r\n        <NavbarBrand>\r\n          <a href=\"/\">\r\n            <img\r\n              width=\"200\"\r\n              src=\"../images/sugar_pin_logo.png\"\r\n              alt=\"pricked finger logo\"\r\n            />\r\n          </a>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            {isAuthenticated && (\r\n              <>\r\n                <NavLink\r\n                  id=\"navlinktext\"\r\n                  href=\"/Main\"\r\n                >\r\n                  Your Sugar Pin\r\n                </NavLink>\r\n                <NavLink\r\n                  id=\"navlinktext\"\r\n                  href=\"/Search\"\r\n                >\r\n                  Search\r\n                </NavLink>\r\n              </>\r\n            )}\r\n\r\n            <NavItem>\r\n              <NavLink\r\n                id=\"navlinktext\"\r\n                href=\"/\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              {!isAuthenticated && (\r\n                <NavLink\r\n                  id=\"navlinktext\"\r\n                  onClick={() => loginWithRedirect({})}\r\n                >\r\n                  Log in\r\n                </NavLink>\r\n              )}\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              {isAuthenticated && (\r\n                <NavLink\r\n                  id=\"navlinktext\"\r\n                  onClick={() => logout()}\r\n                >\r\n                  Log out\r\n                </NavLink>\r\n              )}\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default navBar;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport {\r\n  Card, CardImg, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\n// import \"./ProfileCard.css\";\r\n\r\nconst ProfileCard = () => {\r\n  const { loading, user } = useAuth0();\r\n  if (loading || !user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n\r\n        <Card className=\"profileCard\">\r\n          <CardImg top width=\"30%\" src={user.picture} alt=\"User google image\" />\r\n          <CardBody id=\"body\">\r\n            <CardTitle className=\"profileTitle\">{user.name}</CardTitle>\r\n            <CardSubtitle className=\"profileEmail\">{user.email}</CardSubtitle>\r\n            {/* <CardText><code>{JSON.stringify(user, null, 2)}</code></CardText> */}\r\n          </CardBody>\r\n        </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;","import * as React from 'react';\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  SplineSeries,\r\n  ScatterSeries,\r\n  Title,\r\n  ZoomAndPan,\r\n  Tooltip\r\n} from \"@devexpress/dx-react-chart-bootstrap4\";\r\nimport { EventTracker } from '@devexpress/dx-react-chart';\r\nimport \"@devexpress/dx-react-chart-bootstrap4/dist/dx-react-chart-bootstrap4.css\";\r\n\r\nexport default class DiabetesChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const data = this.props.generateData(50, 200, 1);\r\n    const splinePoint = { size: 10 };\r\n    \r\n    return (\r\n\r\n      <div className=\"mb-5\" id=\"background\">\r\n\r\n      <Chart className=\"test\" data={data} width={\"auto\"} height={600} >\r\n        <ArgumentAxis showGrid />\r\n        <ValueAxis showLabels=\"false\"/>\r\n        <SplineSeries name=\"mg/dl\" valueField=\"value\" argumentField=\"date\" />\r\n        <SplineSeries name=\"High\" valueField=\"high\" argumentField=\"date\" />\r\n        <SplineSeries name=\"Low\" valueField=\"low\" argumentField=\"date\" />\r\n        <ScatterSeries name=\"Time\" valueField=\"value\" argumentField=\"date\" color=\"black\" point={splinePoint} />\r\n\r\n          {/* <Legend position=\"bottom\" /> */}\r\n          <ZoomAndPan />\r\n          <Title text=\"My Glucose Chart\" />\r\n          <EventTracker />\r\n        <Tooltip />\r\n      </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardHeader\r\n} from \"reactstrap\";\r\n\r\nfunction InputForm(props) {\r\n  return (\r\n    <Card className=\"mt-3\">\r\n          <CardHeader>Enter Current Glucose</CardHeader>\r\n    <Form id=\"form\" className=\"p-3\">\r\n      <FormGroup id=\"formGroup\">\r\n          <CardBody className=\"p-3\">\r\n        <Input id=\"input\"\r\n          type=\"text\"\r\n          name=\"glucoseLevel\"\r\n          placeholder=\"mg/dl\"\r\n          {...props}\r\n        />\r\n        </CardBody>\r\n      </FormGroup>\r\n      <Button id=\"button\" block onClick={props.saveToDatabase}>Submit</Button>\r\n    </Form>\r\n    </Card>\r\n  );\r\n}\r\nexport default InputForm;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport ProfileCard from \"../../components/ProfileCard/ProfileCard\";\r\nimport DiabetesChart from \"../../components/DiabetesChart/DiabetesChart\";\r\nimport InputForm from \"../../components/InputForm/InputForm\";\r\nimport AlertHelper from \"../../components/AlertHelper/AlertHelper\";\r\nimport API from \"../../utils/API\";\r\nimport { Row, Container, Col } from \"reactstrap\";\r\nimport Moment from \"react-moment\";\r\nimport \"moment-timezone\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./main.css\";\r\n\r\nconst withMainHOC = Component => {\r\n  return function(props) {\r\n    const { user } = useAuth0();\r\n    return <Component {...props} user={user} />;\r\n  }\r\n};\r\n\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      today: moment().format(),\r\n      glucoseLevel: \"\",\r\n      results: [],\r\n      chartData: [],\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.user && this.props.user) {\r\n      this.getFromDatabase()\r\n    }\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({ isModalOpen: !this.state.isModalOpen });\r\n  };\r\n\r\n  saveToDatabase = (props) => {\r\n    API.saveData({\r\n      date: this.state.today,\r\n      glucose: this.state.glucoseLevel,\r\n      userId: this.props.user.sub\r\n    })\r\n      .then(res => {\r\n        this.getFromDatabase();\r\n      })\r\n      .then(() => {\r\n        this.toggleModal();\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getFromDatabase = (props) => {\r\n    let data = {\r\n      date: this.state.today,\r\n      userId: this.props.user.sub\r\n    }\r\n    API.getByDay(data)\r\n      .then(res => {\r\n        this.setState({\r\n          results: res.data,\r\n          today: new Date(),\r\n          glucoseLevel: \"\"\r\n        });\r\n        // Massage raw data into useable data:\r\n        const resData = this.state.results;\r\n        const newArray = [];\r\n\r\n        resData.forEach(item => {\r\n          const testTime = moment\r\n            .utc(item.date)\r\n            .tz(\"America/Denver\")\r\n            .format();\r\n          let time = testTime.split(\".\", 1);\r\n          let newTime = time[0].split(\"T\");\r\n          let setTime = newTime[1].split(\":\", 2);\r\n          let realTime = setTime.join(\":\");\r\n          let newObj = {\r\n            value: item.glucose,\r\n            high: 160,\r\n            low: 100,\r\n            date: realTime\r\n          };\r\n          newArray.unshift(newObj);\r\n        });\r\n        this.setState({ chartData: newArray });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  generateData = (start, end, step) => {\r\n    const data = this.state.chartData;\r\n    // console.log(\"data\", data);\r\n\r\n    return data;\r\n  };\r\n\r\n  email = () => {};\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row><h2><Moment local>{this.state.today}</Moment></h2></Row>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <ProfileCard />\r\n            <InputForm\r\n              className=\"formBar\"\r\n              saveToDatabase={this.saveToDatabase}\r\n              value={this.state.glucoseLevel}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n          <Col md=\"9\">\r\n            <DiabetesChart\r\n              results={this.state.results}\r\n              generateData={this.generateData}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {this.state.isModalOpen && (\r\n          <AlertHelper\r\n            isOpen={this.state.isModalOpen}\r\n            toggle={this.toggleModal}\r\n            bsLevel={this.state.glucoseLevel}\r\n          />\r\n        )}\r\n      </Container>\r\n      // </div>\r\n      // </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withMainHOC(Main);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nconst AlertHelper = (props) => {\r\n  const [messageText, setMessageText] = useState('')\r\n  const less100 = \"Less than 100 mg/dL: Consider eating a small snack with about 15 grams of carbs to keep your blood sugar from getting too low. Examples include a half cup of fruit juice, a small piece of fruit, or four crackers. Glucose tabs are also a good choice.\"\r\n  const more250 = \"250 mg/dL or higher: Check your urine for ketones using a dipstick. If ketones are present, call your doctor to see if you need to seek medical attention.\"\r\n  const middle1 = \"100 to 160 mg/dL: Unless your doctor tells you otherwise, this is a good goal range for your blood sugar.\"\r\n  const middle2 = \"180 to 250 mg/dL: You're getting close to the danger zone for higher blood sugar levels. Consider some of the tips for lowering your blood sugar level. If you're about to exercise, this is an acceptable range.\"\r\n  useEffect(() => {\r\n    const bloodSugar = Number.parseInt(props.bsLevel)\r\n    let err;\r\n    if (bloodSugar <= 100) {\r\n      setMessageText(less100)\r\n    } else if (bloodSugar > 101 && bloodSugar < 180) {\r\n      setMessageText(middle1)\r\n    } else if (bloodSugar > 181 && bloodSugar < 249) {\r\n      setMessageText(middle2)\r\n    } else if (bloodSugar >= 250) {\r\n      setMessageText(more250)\r\n    } else (console.log(err))\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Modal isOpen={props.isOpen} toggle={props.toggle}>\r\n        <ModalHeader toggle={props.toggle}>Glucose Levels</ModalHeader>\r\n        <ModalBody>\r\n  <p>{messageText}</p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={props.toggle}>Close</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default AlertHelper;","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets data by day\r\n  getByDay: function(data) {\r\n    return axios.post(\"/api/glucose/date/\" + data.date , {userId: data.userId});\r\n  },\r\n  // Save input data to database\r\n  saveData: function(data, user) {\r\n    return axios.post(\"/api/glucose/\", data, user);\r\n  },\r\n  // Gets data by id\r\n  getOneRecord: function(id) {\r\n    return axios.get(\"/api/glucose/\" + id);\r\n  },\r\n  // Updated record with given id\r\n  updateRecord: function(id, data) {\r\n    return axios.put(\"/api/glucose/\" + id, data)\r\n  },\r\n  // Deletes data with given id\r\n  deleteRecord: function(id) {\r\n    return axios.delete(\"/api/glucose/\" + id);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"reactstrap\";\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SearchResults(props) {\r\n  return (\r\n    <Container>\r\n      {props.editData.length ? (\r\n        <ListGroup>\r\n          {props.editData.map(info => (\r\n            <ListGroupItem className=\"p-3\">\r\n              {\" \"}\r\n              <strong>Date:</strong> {info.calender[0]}, <strong>Time:</strong>{\" \"}\r\n              {info.date}, <strong>Value:</strong> {info.value}\r\n              <div className=\"links\">\r\n                <Link\r\n                  // className=\"btn-primary btn mr-2\"\r\n                  to={\"/update/\" + info.id}\r\n                >\r\n                  Update\r\n                </Link>\r\n                <Link id=\"del\" onClick={() => props.delete(info.id)}>Delete</Link>\r\n              </div>\r\n              {/* <Card className=\"mb-3\">\r\n                <CardHeader>\r\n                  {\" \"}\r\n                  <strong>Date:</strong> {info.calender[0]},{\" \"}\r\n                  <strong>Time:</strong> {info.date}, <strong>Value:</strong>{\" \"}\r\n                  {info.value}\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <strong>Manage Item:</strong>\r\n                    <Button color=\"danger\" onClick={() => props.delete(info.id)}>\r\n                      X\r\n                    </Button>\r\n                    <Link\r\n                      className=\"btn-primary btn mr-2\"\r\n                      to={\"/update/\" + info.id}\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </CardTitle>\r\n                </CardBody>\r\n              </Card> */}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      ) : (\r\n        <h3 className=\"noData\">There is no saved data for this date.</h3>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport ProfileCard from \"../../components/ProfileCard/ProfileCard\";\r\nimport DiabetesChart from \"../../components/DiabetesChart/DiabetesChart\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport API from \"../../utils/API\";\r\nimport { Row, Container, Col, Button, Form, FormGroup, Card, CardHeader } from \"reactstrap\";\r\nimport SearchResults from \"../../components/SearchResults/SearchResults\";\r\nimport \"moment-timezone\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./style.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst withMainHOC = Component => {\r\n  return function(props) {\r\n    const { user } = useAuth0();\r\n    return <Component {...props} user={user} />;\r\n  };\r\n};\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      startDate: new Date(),\r\n      results: [],\r\n      chartData: []\r\n    };\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.user && this.props.user) {\r\n      this.getFromDatabase()\r\n    }\r\n  };\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    console.log(this.state.update);\r\n  };\r\n\r\n  getFromDatabase = (props) => {\r\n    let data = {\r\n      date: this.state.startDate,\r\n      userId: this.props.user.sub\r\n    }\r\n    API.getByDay(data)\r\n      .then(res => {\r\n        this.setState({\r\n          results: res.data\r\n        });\r\n        // Massage raw data into useable data:\r\n        const resData = this.state.results;\r\n        const newArray = [];\r\n\r\n        resData.forEach(item => {\r\n          const testTime = moment\r\n            .utc(item.date)\r\n            .tz(\"America/Denver\")\r\n            .format();\r\n            let date = testTime.split(\"T\", 1);\r\n            // let dateSplit = date[0].split(\"-\");\r\n            // let dateRev = dateSplit.reverse();\r\n            // let newDate = dateRev.join(\"-\");\r\n            // console.log(newDate)\r\n            let dateTime = testTime.split(\"-\", 3);\r\n            let time = dateTime[2].split(\"T\");\r\n            let newTime = time[1].split(\":\", 2);\r\n            let setTime = newTime.join(\":\");\r\n          let newObj = {\r\n            id: item._id,\r\n            value: item.glucose,\r\n            high: 160,\r\n            low: 100,\r\n            date: setTime,\r\n            calender: date\r\n          };\r\n          newArray.unshift(newObj);\r\n        });\r\n        this.setState({ chartData: newArray });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  generateData = (start, end, step) => {\r\n    const data = this.state.chartData;\r\n\r\n    return data;\r\n  };\r\n\r\n  delete = id => {\r\n    API.deleteRecord(id)\r\n      .then(res => this.getFromDatabase())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BrowserRouter forceRefresh={true}/>\r\n        <Container>\r\n          <Row>\r\n            <Col md=\"3\" sm=\"6\">\r\n              <ProfileCard />\r\n              <Card className=\"mt-3\">\r\n                <CardHeader className=\"\">Search by Date</CardHeader>\r\n              <Form className=\"mt-3 p-3\">\r\n                <FormGroup className=\"\">\r\n                  <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.handleChange}\r\n                    // withPortal\r\n                  />\r\n                </FormGroup>\r\n                <Button id=\"button\" block onClick={() => this.getFromDatabase()}>Search</Button>\r\n                </Form>\r\n                </Card>\r\n            </Col>\r\n            <Col md=\"9\" sm=\"12\">\r\n            \r\n                <DiabetesChart\r\n                  results={this.state.results}\r\n                  generateData={this.generateData}\r\n                />\r\n              \r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"mx-auto\" md=\"8\">\r\n              <h2 className=\"text-center border-bottom m-3\">Entry Log</h2>\r\n              <SearchResults\r\n                editData={this.state.chartData}\r\n                delete={this.delete}\r\n                windowReload={this.windowReload}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withMainHOC(Search);\r\n","import ProfileCard from \"../../components/ProfileCard/ProfileCard\";\r\nimport React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"moment-timezone\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./update.css\";\r\n\r\nclass Update extends Component {\r\n  state = {\r\n    updatedGlucose: \"\",\r\n    records: {},\r\n    date: \"\",\r\n    time: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRecord();\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n\r\n  getRecord() {\r\n    API.getOneRecord(this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({\r\n          records: res.data\r\n        });\r\n        const timeStamp = moment\r\n          .utc(this.state.records.date)\r\n          .tz(\"America/Denver\")\r\n          .format();\r\n        let date = timeStamp.split(\"T\", 1);\r\n        let dateX = date[0].split(\"-\");\r\n        let dateY = dateX.reverse();\r\n        let newDate = dateY.join(\"-\");\r\n        let time = timeStamp.split(\".\", 1);\r\n        let timeX = time[0].split(\"T\");\r\n        let timeY = timeX[1].split(\":\", 2);\r\n        let newTime = timeY.join(\":\");\r\n        this.setState({ date: newDate, time: newTime });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  editRecord = id => {\r\n    const newData = {\r\n      date: this.state.records.date,\r\n      glucose: this.state.updatedGlucose\r\n    };\r\n    API.updateRecord(id, newData)\r\n      .then(res => {\r\n        this.setState({ updatedGlucose: \"\" });\r\n        this.getFromDatabase(id);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getFromDatabase = id => {\r\n    API.getOneRecord(id)\r\n      .then(res => {\r\n        this.setState({\r\n          records: res.data\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <ProfileCard/>\r\n          </Col>\r\n          <Col md=\"8\">\r\n            <strong>Date:</strong> {this.state.date}, <strong>Time:</strong>{\" \"}\r\n            {this.state.time}, <strong>Value:</strong>{\" \"}\r\n            {this.state.records.glucose}\r\n            <p><strong>Enter an updated value below:</strong></p>\r\n\r\n            <Form>\r\n              <FormGroup>\r\n                <Input id=\"updateGlucose\"\r\n                  name=\"updatedGlucose\"\r\n                  value={this.state.updatedGlucose}\r\n                  onChange={this.handleInputChange}\r\n                  placeholder={\"Updated glucose value\"}\r\n\r\n                />\r\n\r\n                <Button id=\"button\" onClick={() => this.editRecord(this.state.records._id)}>\r\n                  Update\r\n                </Button>\r\n                <Link id=\"link\" to={\"/Search\"}>Back to Search Page.</Link>\r\n              </FormGroup>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Update;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated) {\r\n      return;\r\n    }\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: { targetUrl: path }\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport \"./Footer.css\";\r\n\r\nconst footer = () => {\r\n  return (\r\n    <div color=\"blue\" className=\"font-small pt-4 mt-4\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <Container fluid>\r\n          <p>\r\n            Copyright Andrew Stehno, Matt Wigdahl, Luke Pettit, Tyler Stewart\r\n            &copy;\r\n          </p>\r\n          <p className=\"disclaimer\">\r\n            WARNING!!! The Content is not intended to be a substitute for\r\n            professional medical advice, diagnosis, or treatment. Always seek\r\n            the advice of your physician or other qualified health provider with\r\n            any questions you may have regarding a medical condition.\r\n          </p>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default footer;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  Container,\r\n  Col,\r\n  Row,\r\n  CardImgOverlay\r\n} from \"reactstrap\";\r\nimport \"./article.css\";\r\n\r\nconst Article = props => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Card inverse className=\"mt-5\">\r\n              <CardImg\r\n                width=\"100%\"\r\n                src=\"https://www.niddk.nih.gov/-/media/Images/Health-Information/Diabetes/diabetes-monitor-fruits-vegetables-small.png?la=en&hash=49F9B6874C5B57A4F87DCF5973301470\"\r\n                alt=\"Card image cap\"\r\n                className=\"cardImg mx-auto\"\r\n              />\r\n              <CardImgOverlay>\r\n                <Row>\r\n                  <Col sm=\"4\" lg=\"4\" md=\"12\">\r\n                    <CardText className=\"cardTextMain\">\r\n                      <p className=\"titleText\"> Welcome To Sugar Pin!</p>\r\n                      <p className=\"titleBody\">\r\n                        Please sign in to track your blood sugar levels!\r\n                      </p>\r\n                    </CardText>\r\n                  </Col>\r\n                </Row> */}\r\n                {/* <CardTitle>Example</CardTitle> */}\r\n              </CardImgOverlay>\r\n            </Card>\r\n          </Col>\r\n          <Col md=\"2\">\r\n            <h5 className=\"title mt-5\">Resources</h5>\r\n            <ul>\r\n              <li className=\"list-unstyled\">\r\n                <a\r\n                  href=\"https://www.diabetesselfmanagement.com/education/diabetes-101/\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"\r\n                >\r\n                  Diabetes 101\r\n                </a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a\r\n                  href=\"https://www.diabetesdaily.com/blog/diabetes-eye-screenings-why-they-are-important-and-challenging-639862/\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"\r\n                >\r\n                  Diabetes and your eyes\r\n                </a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a\r\n                  href=\"https://diatribe.org/diabetes-blogs-and-forums\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"\r\n                >\r\n                  diaTribe Learn\r\n                </a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a\r\n                  href=\"https://www.cdc.gov/diabetes/basics/diabetes.html\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\"\r\n                >\r\n                  The Basics\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <h5 className=\"title mt-5\">Links</h5>\r\n            <ul>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"https://www.diabetes.org/\">\r\n                  American Diabetes Association\r\n                </a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"https://www.cdc.gov/diabetes/index.html\">\r\n                  Center for Disease Control\r\n                </a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"https://www.diabetesselfmanagement.com/\">\r\n                  Diabetes Self Management\r\n                </a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"https://www.diabetesdaily.com/\">Diabetes Daily</a>\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport Article from \"../../components/Articles/Articles\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <Article />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./mainStyle.css\";\r\nimport history from \"./utils/history\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./pages/Main/Main\";\r\nimport Search from \"./pages/Search/Search\";\r\n\r\nimport Update from \"./pages/Update/Update\";\r\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\r\nimport Login from \"./pages/Login/Login\";\r\n\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Router history={history}>\r\n      <header>\r\n        <NavBar />\r\n      </header>\r\n      <Switch>\r\n        \r\n        <Route path=\"/\" exact component={Login} />\r\n        <PrivateRoute exact path=\"/Main\" component={Main} />\r\n        <PrivateRoute exact path=\"/Search\" component={Search} />\r\n        <PrivateRoute exact path=\"/update/:id\" component={Update} />\r\n      </Switch>\r\n\r\n    </Router>\r\n  </div>\r\n)\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}